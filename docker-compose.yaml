version: '2'
services:
  user-service:
    image: rb/restaurant-booking-user-service:0.0.1-SNAPSHOT
    mem_limit: 700m
    ports:
      - "8000:8000"
    networks:
      - booking-network
    depends_on:
      - naming-server
    restart: always
    environment:
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka

  table-service:
    image: rb/restaurant-booking-table-service:0.0.1-SNAPSHOT
    mem_limit: 700m
    ports:
      - "8200:8200"
    networks:
      - booking-network
    depends_on:
      - naming-server
      - kafka
    restart: always
    environment:
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      SPRING_KAFKA_BOOTSTRAP_SERVERS: http://kafka:9092

  restaurant-service:
    image: rb/restaurant-booking-restaurant-service:0.0.1-SNAPSHOT
    mem_limit: 700m
    ports:
      - "8100:8100"
    networks:
      - booking-network
    depends_on:
      - naming-server
      - kafka
    restart: always
    environment:
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      SPRING_KAFKA_BOOTSTRAP_SERVERS: http://kafka:9092
      SPRING.REDIS.HOST: redis
      SPRING.REDIS.PORT: 6379

  booking-service:
    image: rb/restaurant-booking-booking-service:0.0.1-SNAPSHOT
    mem_limit: 700m
    ports:
      - "8300:8300"
    networks:
      - booking-network
    depends_on:
      - naming-server
      - kafka
    restart: always
    environment:
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      SPRING_KAFKA_BOOTSTRAP_SERVERS: http://kafka:9092

  front-end:
    image: rb/restaurant-booking-front-end:0.0.1-SNAPSHOT
    mem_limit: 700m
    ports:
      - "8080:8080"
    networks:
      - booking-network
    depends_on:
      - naming-server
      - kafka
    restart: always
    environment:
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      SPRING_KAFKA_BOOTSTRAP_SERVERS: http://kafka:9092

  api-gateway:
    image: rb/restaurant-booking-api-gateway:0.0.1-SNAPSHOT
    mem_limit: 700m
    ports:
      - "8765:8765"
    depends_on:
      - naming-server
      - booking-service
      - restaurant-service
      - table-service
      - user-service
    networks:
      - booking-network
    restart: always
    environment:
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka

  naming-server:
    image: rb/restaurant-booking-naming-server:0.0.1-SNAPSHOT
    mem_limit: 700m
    ports:
      - "8761:8761"
    networks:
      - booking-network
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - booking-network
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    networks:
      - booking-network
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis:
    container_name: redis
    hostname: redis
    image: redis
    restart: always
    networks:
      - booking-network

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - booking-network
    ports:
      - "8081:8081"

networks:
  booking-network: